spring.application.name=taller1    

# autenticacion
spring.datasource.url=jdbc:postgresql://postgres.railway.internal:5432/railway
spring.datasource.username=postgres
spring.datasource.password=vAgiwiGIaxPxleuVxMzslPvtiSENlfbk
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.open-in-view=false

# Server (CRÍTICO para Railway)
# La variable PORT es proporcionada automáticamente por Railway en producción
# En desarrollo local, se usará el puerto 8080 por defecto si PORT no está definida
server.port=${PORT:8080}

# Actuator (Health Checks)
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# Connection Pool - Configuración optimizada para Railway
spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=120000
spring.datasource.hikari.max-lifetime=1800000

# Database Resilience
spring.datasource.hikari.validation-timeout=3000
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.tomcat.test-on-borrow=true
spring.datasource.tomcat.validation-query=SELECT 1
spring.datasource.tomcat.validation-interval=30000

# Logging
logging.level.org.springframework=INFO
logging.level.org.hibernate=INFO
logging.level.com.zaxxer.hikari=INFO

# Tomcat/Web Server Configuration
server.tomcat.max-threads=200
server.tomcat.min-spare-threads=20
server.connection-timeout=5000

# Additional Railway Optimization
spring.mvc.async.request-timeout=45000
